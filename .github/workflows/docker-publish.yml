name: Docker Publish

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  MAJOR: 0
  MINOR: 0

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set tags
        id: vars
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          SANITIZED_BRANCH="${BRANCH_NAME//\//-}"
          SHORT_SHA=${GITHUB_SHA::7}
          PATCH=${GITHUB_RUN_NUMBER}

          VERSION="${MAJOR}.${MINOR}.${PATCH}"

          if [ "$SANITIZED_BRANCH" = "main" ]; then
            echo -e "${REGISTRY}/${IMAGE_NAME}:latest\n${REGISTRY}/${IMAGE_NAME}:${VERSION}\n${REGISTRY}/${IMAGE_NAME}:${SHORT_SHA}" > tags.txt
          else
            echo -e "${REGISTRY}/${IMAGE_NAME}:${SANITIZED_BRANCH}-latest\n${REGISTRY}/${IMAGE_NAME}:${SANITIZED_BRANCH}-${VERSION}\n${REGISTRY}/${IMAGE_NAME}:${SANITIZED_BRANCH}-${SHORT_SHA}" > tags.txt
          fi

          echo "IMAGE_TAGS<<EOF" >> $GITHUB_ENV
          cat tags.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_TAGS }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max